type User {
	 id: ID!
	 name: String
	 secondName: String
	 surname: String
	 yearOfBirth: Int
	 account: Account
}


input LoginRequest {
 	 username: String
	 password: String
}

input RoleUuidForm {
   uuids: [UUID]
}

input CreateUserForm {
 name: String!,
 secondName: String,
 surname: String!
 yearOfBirth: Int!
 username: String!,
 email: String!
 password: String!
}

input UpdateUserForm {
 username: String!,
 email: String!
 password: String!
}

input FilterUserForm {
 username: String,
 email: String
}

type UserResponse {
 uuid: UUID
 name: String
 secondName: String
 surname: String
 yearOfBirth: Int
 account: AccountResponse
}

type JwtResponse {
	 token: String
}

type UserWithAccount {
	 userUuid: UUID
	 accountUuid: UUID
	 username: String
	 password: String
	 email: String
	 roles: [String]
	 isEnabled: Boolean
	 isLocked: Boolean
	 isTwoFactorEnabled: Boolean
}

input VerifyUserForm {
 	 email: String
	 verificationCode: String
}

